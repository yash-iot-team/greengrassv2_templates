import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { TransferCertificateRequest, TransferCertificateResponse } from "../models/models_2";
export interface TransferCertificateCommandInput extends TransferCertificateRequest {
}
export interface TransferCertificateCommandOutput extends TransferCertificateResponse, __MetadataBearer {
}

export declare class TransferCertificateCommand extends $Command<TransferCertificateCommandInput, TransferCertificateCommandOutput, IoTClientResolvedConfig> {
    readonly input: TransferCertificateCommandInput;
    constructor(input: TransferCertificateCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TransferCertificateCommandInput, TransferCertificateCommandOutput>;
    private serialize;
    private deserialize;
}
