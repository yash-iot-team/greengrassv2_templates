import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { TestInvokeAuthorizerRequest, TestInvokeAuthorizerResponse } from "../models/models_2";
export interface TestInvokeAuthorizerCommandInput extends TestInvokeAuthorizerRequest {
}
export interface TestInvokeAuthorizerCommandOutput extends TestInvokeAuthorizerResponse, __MetadataBearer {
}

export declare class TestInvokeAuthorizerCommand extends $Command<TestInvokeAuthorizerCommandInput, TestInvokeAuthorizerCommandOutput, IoTClientResolvedConfig> {
    readonly input: TestInvokeAuthorizerCommandInput;
    constructor(input: TestInvokeAuthorizerCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<TestInvokeAuthorizerCommandInput, TestInvokeAuthorizerCommandOutput>;
    private serialize;
    private deserialize;
}
