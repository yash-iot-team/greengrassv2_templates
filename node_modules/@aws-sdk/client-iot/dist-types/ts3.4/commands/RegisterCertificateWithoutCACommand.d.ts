import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { RegisterCertificateWithoutCARequest, RegisterCertificateWithoutCAResponse } from "../models/models_2";
export interface RegisterCertificateWithoutCACommandInput extends RegisterCertificateWithoutCARequest {
}
export interface RegisterCertificateWithoutCACommandOutput extends RegisterCertificateWithoutCAResponse, __MetadataBearer {
}

export declare class RegisterCertificateWithoutCACommand extends $Command<RegisterCertificateWithoutCACommandInput, RegisterCertificateWithoutCACommandOutput, IoTClientResolvedConfig> {
    readonly input: RegisterCertificateWithoutCACommandInput;
    constructor(input: RegisterCertificateWithoutCACommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<RegisterCertificateWithoutCACommandInput, RegisterCertificateWithoutCACommandOutput>;
    private serialize;
    private deserialize;
}
