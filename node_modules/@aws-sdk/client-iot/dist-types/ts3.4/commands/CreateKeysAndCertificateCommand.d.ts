import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateKeysAndCertificateRequest, CreateKeysAndCertificateResponse } from "../models/models_0";
export interface CreateKeysAndCertificateCommandInput extends CreateKeysAndCertificateRequest {
}
export interface CreateKeysAndCertificateCommandOutput extends CreateKeysAndCertificateResponse, __MetadataBearer {
}

export declare class CreateKeysAndCertificateCommand extends $Command<CreateKeysAndCertificateCommandInput, CreateKeysAndCertificateCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateKeysAndCertificateCommandInput;
    constructor(input: CreateKeysAndCertificateCommandInput);
    
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateKeysAndCertificateCommandInput, CreateKeysAndCertificateCommandOutput>;
    private serialize;
    private deserialize;
}
